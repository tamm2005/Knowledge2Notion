name: MAIN RUN

on:
  schedule:
    - cron: "0 17 * * *"   # <=== At 17:00 UTC time per day

  workflow_dispatch:
    inputs:
      logLevel:
        description: 'Log level'
        required: false
        default: 'warning'
        type: choice
        options:
        - info
        - warning
        - debug
      tags:
        description: 'Test scenario tags'
        required: false
        type: boolean
      environment:
        description: 'Environment to run tests against'
        type: environment
        required: false

jobs:
  build:
    runs-on: windows-latest
    steps:
      - name: checkout repo content
        uses: actions/checkout@v2 # checkout the repository content

      - name: setup python
        uses: actions/setup-python@v5
        with:
          python-version: '3.8.5' # install the python version needed
          cache: 'pip' # caching pip dependencies

      - name: install python packages
        uses: aabadie/action-install-python-requirements@v2.0.1
        with:
          requirements: requirements.txt
          update-pip: true
      - name: Ensure browsers are installed
        run: python -m playwright install --with-deps
        
      #- name: Install dependencies
      #  run: |
      #    python -m pip install --upgrade pip
      #    pip install pylint
      #- name: Analysing the code with pylint
      #  run: |
      #    pylint --errors-only $(git ls-files '*.py')
          
      #- name: execute gmail2notion script # run main.py
      #  run: python main_gmail.py
      #  env:
      #    EMAIL_ID: ${{ secrets.EMAIL_ID }}
      #    GMAIL_PASSWORD: ${{ secrets.GMAIL_PASSWORD }}
      #    NOTION_TOKEN: ${{ secrets.NOTION_TOKEN }}
      #    NOTION_GMAIL_DATABASE_ID: ${{ secrets.NOTION_GMAIL_DATABASE_ID }}
      #    GMAIL_LABEL: ${{ vars.GMAIL_LABEL }}

      - name: execute threads2notion script # run main.py
        run: python main_telegram.py
        env:
          API_ID: ${{ secrets.API_ID }}
          API_HASH: ${{ secrets.API_HASH }}
          NOTION_TOKEN: ${{ secrets.NOTION_TOKEN }}
          NOTION_THREADS_DATABASE_ID: ${{ secrets.NOTION_THREADS_DATABASE_ID }}
          ONEDRIVE_SERVICE_CLIENT_ID: ${{ secrets.ONEDRIVE_SERVICE_CLIENT_ID }}
          ONEDRIVE_SERVICE_CLIENT_SECRET: ${{ secrets.ONEDRIVE_SERVICE_CLIENT_SECRET }}
          ONEDRIVE_SERVICE_TENANT_ID: ${{ secrets.ONEDRIVE_SERVICE_TENANT_ID }}
          ONEDRIVE_USERID: ${{ secrets.ONEDRIVE_USERID }}
          ONEDRIVE_DRIVE_ID: ${{ secrets.ONEDRIVE_DRIVE_ID }}
          TELEGRAM_THREAD_GROUP: ${{ vars.TELEGRAM_THREAD_GROUP }}

      #- name: execute yt2notion script # run main.py
      #  run: python main_youtube.py
      #  env:
      #    NOTION_TOKEN: ${{ secrets.NOTION_TOKEN }}
      #    NOTION_THREADS_DATABASE_ID: ${{ secrets.NOTION_YOUTUBE_DATABASE_ID }}
      #    ONEDRIVE_SERVICE_CLIENT_ID: ${{ secrets.ONEDRIVE_SERVICE_CLIENT_ID }}
      #    ONEDRIVE_SERVICE_CLIENT_SECRET: ${{ secrets.ONEDRIVE_SERVICE_CLIENT_SECRET }}
      #    ONEDRIVE_SERVICE_TENANT_ID: ${{ secrets.ONEDRIVE_SERVICE_TENANT_ID }}
      #    ONEDRIVE_USERID: ${{ secrets.ONEDRIVE_USERID }}
      #    ONEDRIVE_DRIVE_ID: ${{ secrets.ONEDRIVE_DRIVE_ID }}
      #    YOUTUBEAPIKEY: ${{ secrets.YOUTUBEAPIKEY }}
      #    PLAYLIST: ${{ vars.YT_PLAYLIST_IDS }}
      
          
